{"version":3,"sources":["components/AppBar.tsx","components/Loading.tsx","keys.config.ts","store/reducer.tsx","lib/utils.ts","components/Form.tsx","components/Recieve.tsx","components/ConnectedIcon.tsx","components/WalletAccordion.tsx","components/CoinData.tsx","components/ControlledAccordion.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","useState","undefined","version","setVersion","useEffect","connection","url","process","REACT_APP_CONNECTION_URL","Connection","getVersion","then","catch","error","console","log","Box","sx","flexGrow","AppBar","position","style","background","green","Toolbar","IconButton","size","edge","color","aria-label","mr","Avatar","alt","src","Typography","variant","component","fontFamily","fontSize","useStyles","makeStyles","theme","createStyles","root","display","marginLeft","spacing","CircularIndeterminate","classes","className","marginTop","CircularProgress","secretKey","Uint8Array","address","Keypair","fromSecretKey","publicKey","toString","initialState","pubKey","balance","severity","isFetching","txSignature","message","WalletContext","createContext","walletReducer","state","action","type","payload","WalletProvider","children","useReducer","dispatch","Provider","value","useWalletContext","context","useContext","Error","getNodeRpcURL","REACT_APP_USE_DATAHUB","REACT_APP_DATAHUB_DEVNET_RPC_URL","REACT_APP_DATAHUB_API_KEY","REACT_APP_DEVNET_URL","FormDialog","React","open","setOpen","setAddress","amount","setAmount","handleClickOpen","destinationAddress","generate","handleClose","Button","onClick","startIcon","A700","disabled","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","required","margin","placeholder","helperText","onChange","e","currentTarget","fullWidth","InputLabelProps","shrink","DialogActions","amountNumber","parseFloat","isNaN","toast","autoClose","wsEndpoint","REACT_APP_DATAHUB_DEVNET_WS_URL","fromPubKey","PublicKey","toPubKey","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","signers","transaction","Transaction","add","sendAndConfirmTransaction","signature","success","marginBottom","alignItems","Recieve","textareaRef","useRef","copyAddress","navigator","clipboard","writeText","inputRef","ref","current","aria-readonly","onFocus","select","useQrCodeStyles","qrcodeContainer","flexDirection","Qrcode","showQrcode","setShowQrcode","includeMargin","BadgeAvatars","StyledBadge","styled","Badge","backgroundColor","boxShadow","palette","paper","top","left","width","height","borderRadius","animation","border","content","transform","opacity","overlap","anchorOrigin","vertical","horizontal","DetailedAccordion","panel","expanded","setExpanded","publicKeyToDisplay","slice","getBalance","pauseOnHover","err","Accordion","event","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","justifyContent","Form","CoinData","minWidth","Stack","direction","fontWeight","verticalAlign","ControlledAccordions","flexShrink","window","injectStyle","App","explorerUrl","Paper","overflow","CssBaseline","Container","maxWidth","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getDesignTokens","mode","primary","main","default","grey","text","secondary","darkModeTheme","createTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4b31d4f6.chunk.js","sourcesContent":["import Avatar from \"@mui/material/Avatar\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState, useEffect } from \"react\";\nimport { Connection } from \"@solana/web3.js\";\nimport { green } from \"@mui/material/colors\";\n\nexport default function NavBar() {\n  const [version, setVersion] = useState<string | undefined | number>(\n    undefined\n  );\n\n  useEffect(() => {\n    connection();\n  }, []);\n  const connection = () => {\n    const url = process.env.REACT_APP_CONNECTION_URL as string;\n    const connection = new Connection(url);\n    connection\n      .getVersion()\n      .then((version) => setVersion(version[\"solana-core\"]))\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" style={{ background: green[300] }}>\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"success\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <Avatar\n              alt=\"Solana Icon\"\n              src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/solana/info/logo.png\"\n            />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1 }}\n            fontFamily={\"Quicksand\"}\n          >\n            Test Wallet\n          </Typography>\n          <Typography fontFamily={\"Quicksand\"} fontSize={\"20\"}>\n            Devnet Version {version}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      \"& > * + *\": {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} style={{ marginTop: 20 }}>\n      <CircularProgress color=\"primary\" />\n    </div>\n  );\n}\n","export const secretKey = new Uint8Array([\n  86, 16, 149, 141, 194, 9, 245, 25, 166, 204, 253, 51, 196, 186, 157, 94, 223,\n  207, 76, 105, 116, 240, 225, 146, 24, 14, 224, 202, 6, 11, 108, 182, 156, 246,\n  244, 202, 242, 168, 176, 250, 90, 220, 239, 227, 36, 120, 127, 200, 58, 100,\n  108, 130, 183, 60, 208, 106, 146, 245, 226, 45, 84, 14, 147, 251,\n]);\n","import { useReducer, createContext, ReactNode, useContext } from \"react\";\nimport { secretKey } from \"../keys.config\";\nimport { Keypair } from \"@solana/web3.js\";\nconst key = Keypair.fromSecretKey(secretKey);\nconst address = key.publicKey.toString();\n\nconst initialState: IState = {\n  pubKey: address,\n  balance: 0,\n  severity: \"\",\n  isFetching: null,\n  txSignature: undefined,\n  message: \"\",\n};\n\ninterface IState {\n  pubKey: string;\n  balance: number;\n  severity: string;\n  isFetching: null | boolean;\n  txSignature: string | undefined;\n  message: string;\n}\n\nexport type WalletAction =\n  | { type: \"getAdress\" }\n  | { type: \"getBalance\"; payload: number }\n  | { type: \"transfer\"; payload: number }\n  | { type: \"setTxSignature\"; payload: string | undefined }\n  | { type: \"isFetching\"; payload: boolean }\n  | { type: \"severity\"; payload: { severity: string; message: string } }\n  | { type: \"fund\"; payload: { type: string; message: string } };\n\nexport type Dispatch = (action: WalletAction) => void;\n\nexport type State = typeof initialState;\n\nconst WalletContext = createContext<\n  { state: State; dispatch: Dispatch } | undefined\n>(undefined);\n\nconst walletReducer = (state: IState, action: WalletAction) => {\n  switch (action.type) {\n    case \"getAdress\":\n      return {\n        ...state,\n        pubKey: address,\n      };\n    case \"getBalance\":\n      return {\n        ...state,\n        balance:\n          state.balance === 0 ? state.balance + action.payload : action.payload,\n      };\n    case \"fund\":\n      return {\n        ...state,\n        severity: action.payload.type,\n        message: action.payload.message,\n      };\n    case \"severity\":\n      return {\n        ...state,\n        severity: action.payload.severity,\n        message: action.payload.message,\n      };\n    case \"transfer\":\n      return {\n        ...state,\n        balance: state.balance - action.payload,\n      };\n    case \"isFetching\":\n      return {\n        ...state,\n        isFetching: action.payload,\n      };\n    case \"setTxSignature\":\n      return {\n        ...state,\n        txSignature: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const WalletProvider = ({ children }: { children: ReactNode }) => {\n  const [state, dispatch] = useReducer(walletReducer, initialState);\n  return (\n    <WalletContext.Provider value={{ state, dispatch }}>\n      {children}\n    </WalletContext.Provider>\n  );\n};\n\nexport const useWalletContext = () => {\n  const context = useContext(WalletContext);\n  if (!context)\n    throw new Error(\"UseWalletContext must be used inside a WalletProvider!\");\n\n  return context;\n};\n","// Datahub Node's RPC URL\nexport const getNodeRpcURL = () => {\n  return process.env.REACT_APP_USE_DATAHUB === \"true\"\n    ? `https://${process.env.REACT_APP_DATAHUB_DEVNET_RPC_URL}/apikey/${process.env.REACT_APP_DATAHUB_API_KEY}`\n    : process.env.REACT_APP_DEVNET_URL;\n};\n// Datahub Node's WS (Web Socket) URL\nexport const getNodeWsURL = () => {\n  return process.env.REACT_APP_USE_DATAHUB === \"true\"\n    ? `wss://${process.env.REACT_APP_DATAHUB_DEVNET_WS_URL}/apikey/${process.env.REACT_APP_DATAHUB_API_KEY}`\n    : process.env.REACT_APP_DEVNET_URL;\n};\n\n// Helper for generating an account URL on Solana Explorer\nexport const getAccountExplorerURL = (address: undefined) => {\n  return `https://explorer.solana.com/address/${address}?cluster=devnet`;\n};\n\n// Helper for generating a transaction URL on Solana Explorer\nexport const getTxExplorerURL = (signature: undefined) => {\n  return `https://explorer.solana.com/tx/${signature}?cluster=devnet`;\n};\n","import React from \"react\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  Keypair,\n  sendAndConfirmTransaction,\n} from \"@solana/web3.js\";\nimport { useWalletContext } from \"../store/reducer\";\nimport { getNodeRpcURL, getNodeWsURL } from \"../lib/utils\";\nimport { secretKey } from \"../keys.config\";\nimport Typography from \"@mui/material/Typography\";\nimport { green } from \"@mui/material/colors\";\n\nfunction FormDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [address, setAddress] = React.useState(\"\");\n  const [amount, setAmount] = React.useState(\"\");\n  const { state, dispatch } = useWalletContext();\n\n  //transfer function\n  const transfer = () => {\n    const amountNumber = parseFloat(amount);\n\n    if (isNaN(amountNumber)) {\n      toast.error(\"Amount entered is not a number\", {\n        position: \"top-center\",\n        autoClose: 9000,\n      });\n      return;\n    }\n\n    const url = getNodeRpcURL();\n    const connection = new Connection(url as string, {\n      wsEndpoint: getNodeWsURL(),\n    });\n\n    const fromPubKey = new PublicKey(state.pubKey);\n    const toPubKey = new PublicKey(address);\n\n    const instructions = SystemProgram.transfer({\n      fromPubkey: fromPubKey,\n      toPubkey: toPubKey,\n      lamports: amountNumber,\n    });\n\n    const signers = [\n      {\n        publicKey: fromPubKey,\n        secretKey: secretKey,\n      },\n    ];\n\n    // Create a transaction\n    // Add instructions\n    // Call sendAndConfirmTransaction\n    // On success, call setTxSignature and setFetching\n    const transaction = new Transaction().add(instructions);\n    // setTxSignature(null);\n    dispatch({ type: \"setTxSignature\", payload: undefined });\n    dispatch({ type: \"isFetching\", payload: true });\n    sendAndConfirmTransaction(connection, transaction, signers)\n      .then((signature) => {\n        dispatch({ type: \"setTxSignature\", payload: signature });\n        dispatch({ type: \"isFetching\", payload: false });\n        toast.success(\"Transaction was successful!\", {\n          position: \"top-right\",\n          autoClose: 7000,\n        });\n        setAddress(\"\");\n        setAmount(\"\");\n        console.log(signature);\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch({ type: \"isFetching\", payload: false });\n        toast.error(\"Transaction failed!\", {\n          position: \"top-right\",\n          autoClose: 6000,\n        });\n      });\n    console.log(address, amount);\n\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    const burnAddress = Keypair.generate();\n    const destinationAddress = burnAddress.publicKey.toString();\n    console.log(destinationAddress);\n    setOpen(true);\n  };\n\n  const handleAddressChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setAddress(e.currentTarget.value);\n  };\n\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setAmount(e.currentTarget.value);\n  };\n\n  const handleClose = () => {\n    console.log(address, amount);\n    setOpen(false);\n    setAddress(\"\");\n    setAmount(\"\");\n  };\n  // const explorerUrl: string = getTxExplorerURL(state.txSignature as string);\n  //const explorerUrl = `https://explorer.solana.com/tx/${state.txSignature}?cluster=devnet`;\n  return (\n    <div>\n      {state.isFetching === null ? (\n        <Button\n          variant=\"outlined\"\n          onClick={handleClickOpen}\n          startIcon={<SendIcon />}\n        >\n          <Typography fontFamily={\"Quicksand\"} color={green.A700}>\n            {\" \"}\n            Send{\" \"}\n          </Typography>\n        </Button>\n      ) : state.isFetching === true ? (\n        <Button\n          variant=\"outlined\"\n          onClick={handleClickOpen}\n          disabled\n          startIcon={<SendIcon />}\n        >\n          <Typography fontFamily={\"Quicksand\"} color={green.A700}>\n            {\" \"}\n            Send{\" \"}\n          </Typography>\n        </Button>\n      ) : (\n        <Button\n          variant=\"outlined\"\n          onClick={handleClickOpen}\n          startIcon={<SendIcon />}\n        >\n          <Typography fontFamily={\"Quicksand\"} color={green.A700}>\n            {\" \"}\n            Send{\" \"}\n          </Typography>\n        </Button>\n      )}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography fontFamily={\"Quicksand\"}>\n            {\" \"}\n            Paste Destination address{\" \"}\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText fontFamily={\"Quicksand\"}>\n            Verify that the address is correct as funds sent to the wrong\n            address might not be recovered.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            id=\"outlined-full-width\"\n            label=\"Sol Devnet Address\"\n            required\n            style={{ margin: 8, fontFamily: \"Quicksand\" }}\n            placeholder=\"Sol Devnet Address\"\n            helperText=\"Address!\"\n            value={address}\n            onChange={handleAddressChange}\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-full-width\"\n            label=\"Amount\"\n            style={{ margin: 8, fontFamily: \"Quicksand\" }}\n            required\n            placeholder=\"1000000000 lamport = 1 SOL\"\n            helperText=\"Amount!\"\n            value={amount}\n            onChange={handleAmountChange}\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            style={{ fontFamily: \"Quicksand\", color: green.A700 }}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={transfer}\n            startIcon={<SendIcon />}\n            variant=\"outlined\"\n            style={{ fontFamily: \"Quicksand\", color: green.A700 }}\n          >\n            Send\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default FormDialog;\n","import React, { useRef } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useWalletContext } from \"../store/reducer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CopyIcon from \"mdi-material-ui/ContentCopy\";\nimport QrcodeIcon from \"mdi-material-ui/Qrcode\";\nimport { toast } from \"react-toastify\";\nimport { green } from \"@mui/material/colors\";\nimport QRCode from \"qrcode.react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\nimport Typography from \"@mui/material/Typography\";\n//styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    alignItems: \"baseline\",\n  },\n}));\n\n//Recieve component\nexport default function Recieve() {\n  const [open, setOpen] = React.useState(false);\n  const { state } = useWalletContext();\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //copy address function\n  const textareaRef = useRef();\n\n  const copyAddress = () => {\n    navigator.clipboard.writeText(state.pubKey);\n    toast.success(\"Successfully copied address!\", {\n      position: \"bottom-left\",\n      autoClose: 5000,\n    });\n\n    setOpen(false);\n  };\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        startIcon={<BusinessCenterIcon />}\n      >\n        <Typography fontFamily={\"Quicksand\"} color={green.A700}>\n          Recieve{\" \"}\n        </Typography>\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Copy Address</DialogTitle>\n        <DialogContent>\n          <DialogContentText fontFamily={\"Quicksand\"}>\n            Copy the highlighted address to recieve SOL tokens or click to scan\n            barcode\n          </DialogContentText>\n          <div className={classes.root}>\n            <TextField\n              inputRef={(ref) => (textareaRef.current = ref)}\n              autoFocus\n              value={state.pubKey}\n              margin=\"normal\"\n              label=\"Recieving Address\"\n              type=\"text\"\n              fullWidth\n              aria-readonly\n              onFocus={(e) => e.currentTarget.select()}\n            />\n            <IconButton onClick={copyAddress}>\n              <CopyIcon />\n            </IconButton>\n            <Qrcode value={state.pubKey} />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"success\" variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={copyAddress} color=\"success\" variant=\"outlined\">\n            Copy\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst useQrCodeStyles = makeStyles((theme) => ({\n  qrcodeContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction Qrcode({ value }: { value: string }) {\n  const [showQrcode, setShowQrcode] = React.useState(false);\n  const classes = useQrCodeStyles();\n\n  return (\n    <>\n      <IconButton onClick={() => setShowQrcode(true)}>\n        <QrcodeIcon />\n      </IconButton>\n      <Dialog open={showQrcode} onClose={() => setShowQrcode(false)}>\n        <DialogContent className={classes.qrcodeContainer}>\n          <QRCode value={value} size={256} includeMargin />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Badge from \"@mui/material/Badge\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { Connection } from \"@solana/web3.js\";\n\n// const StyledBadge = styled(Badge)(({ theme }) => ({\n//   '& .MuiBadge-badge': {\n//     backgroundColor: '#44b700',\n//     color: '#44b700',\n//     boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n//     '&::after': {\n//       position: 'absolute',\n//       top: 0,\n//       left: 0,\n//       width: '100%',\n//       height: '100%',\n//       borderRadius: '50%',\n//       animation: 'ripple 1.2s infinite ease-in-out',\n//       border: '1px solid currentColor',\n//       content: '\"\"',\n//     },\n//   },\n//   '@keyframes ripple': {\n//     '0%': {\n//       transform: 'scale(.8)',\n//       opacity: 1,\n//     },\n//     '100%': {\n//       transform: 'scale(2.4)',\n//       opacity: 0,\n//     },\n//   },\n// }));\n\nexport default function BadgeAvatars() {\n  const [version, setVersion] = useState<string | undefined | number>(\n    undefined\n  );\n\n  useEffect(() => {\n    connection();\n  }, []);\n  const connection = () => {\n    //const url = getNodeRpcURL();\n    // Create a connection\n    // Get the API version\n    // and save it to the component's state\n    const url = process.env.REACT_APP_CONNECTION_URL as string;\n    const connection = new Connection(url);\n    connection\n      .getVersion()\n      .then((version) => setVersion(version[\"solana-core\"]))\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const StyledBadge = styled(Badge)(({ theme }) => ({\n    \"& .MuiBadge-badge\": {\n      backgroundColor: version ? \"#44b700\" : \"#f5424b\",\n      color: version ? \"#44b700\" : \"#f5424b\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  }));\n  return (\n    <>\n      <StyledBadge\n        overlap=\"circular\"\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        variant=\"dot\"\n      >\n        <Avatar\n          alt=\"Solana Icon\"\n          src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/solana/info/logo.png\"\n        />\n      </StyledBadge>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { useWalletContext } from \"../store/reducer\";\nimport { getNodeRpcURL } from \"../lib/utils\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport Recieve from \"./Recieve\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport BadgeAvatars from \"./ConnectedIcon\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React from \"react\";\nimport { green } from \"@mui/material/colors\";\n\nconst DECIMAL_OFFSET = 1000000000;\n\nexport default function DetailedAccordion() {\n  const [expanded, setExpanded] = React.useState<string | false>(false);\n\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n  const { state, dispatch } = useWalletContext();\n  const publicKeyToDisplay = `${state.pubKey.slice(\n    0,\n    5\n  )}...${state.pubKey.slice(-5)}`;\n\n  //get balance\n  useEffect(() => {\n    //getBalance();\n    const url = getNodeRpcURL();\n    const connection = new Connection(url as string);\n\n    const publicKey = new PublicKey(state.pubKey);\n    connection\n      .getBalance(publicKey)\n      .then((balance) => {\n        dispatch({ type: \"getBalance\", payload: balance / DECIMAL_OFFSET });\n        toast.success(\"Successfully Connected!\", {\n          position: \"bottom-center\",\n          autoClose: 7000,\n          pauseOnHover: true,\n        });\n      })\n      .catch((err) => {\n        toast.error(\"Not Connected!\", {\n          position: \"top-right\",\n          autoClose: 6000,\n        });\n        console.log(err);\n      });\n  }, [dispatch, state.pubKey]);\n  // const getBalance = () => {\n  //   const url = getNodeRpcURL();\n  //   const connection = new Connection(url as string);\n\n  //   const publicKey = new PublicKey(state.pubKey);\n  //   connection\n  //     .getBalance(publicKey)\n  //     .then((balance) => {\n  //       dispatch({ type: \"getBalance\", payload: balance / DECIMAL_OFFSET });\n  //       toast.success(\"Successfully Connected!\", {\n  //         position: \"bottom-center\",\n  //         autoClose: 7000,\n  //         pauseOnHover: true,\n  //       });\n  //     })\n  //     .catch((err) => {\n  //       toast.error(\"Not Connected!\", {\n  //         position: \"top-right\",\n  //         autoClose: 6000,\n  //       });\n  //       console.log(err);\n  //     });\n  // };\n  return (\n    <div>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        style={{ border: \"2px solid grey\", borderRadius: \"10px\" }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <div>\n            <BadgeAvatars />\n\n            <Typography style={{ fontFamily: \"Quicksand\", fontSize: 20 }}>\n              Main Account <br />({publicKeyToDisplay})\n            </Typography>\n\n            <Typography\n              style={{ fontFamily: \"Quicksand\", fontSize: 20 }}\n              color=\"green\"\n            >\n              {state.balance} SOL\n            </Typography>\n          </div>\n          <Typography\n            style={{\n              fontFamily: \"Quicksand\",\n              marginLeft: 20,\n              fontSize: 18,\n              color: green.A700,\n            }}\n          >\n            Send/Recieve\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Form />\n\n            <Recieve />\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n","import TrendingDownIcon from \"@mui/icons-material/TrendingDown\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Stack from \"@mui/material/Stack\";\nimport { Box } from \"@mui/system\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default function CoinData() {\n  return (\n    <Box\n      sx={{\n        //  bgcolor: \"background.paper\",\n        minWidth: 300,\n      }}\n    >\n      <Box sx={{ color: \"text.secondary\", fontFamily: \"Quicksand\" }}>\n        Rank #7\n      </Box>\n      <Stack direction=\"row\" spacing={2}>\n        <Avatar\n          alt=\"Solana Icon\"\n          src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/solana/info/logo.png\"\n          sx={{ width: 24, height: 24 }}\n        />\n        <Typography style={{ fontFamily: \"Quicksand\", fontSize: 15 }}>\n          Solana (SOL)\n        </Typography>\n      </Stack>\n      <Stack direction=\"row\" spacing={1}>\n        <Box sx={{ color: \"text.primary\", fontSize: 20, fontWeight: \"medium\" }}>\n          $154.82{\" \"}\n        </Box>\n        <TrendingDownIcon\n          sx={{ color: \"red\", fontSize: 16, verticalAlign: \"sub\" }}\n        />\n        <Typography style={{ color: \"red\", fontSize: 16, marginTop: 3 }}>\n          -2.9%\n        </Typography>\n      </Stack>\n      <Stack direction=\"row\" spacing={11}>\n        <Box\n          sx={{\n            color: \"text.secondary\",\n            display: \"inline\",\n            fontWeight: \"medium\",\n            fontSize: 15,\n          }}\n        >\n          24Hr Range:\n        </Box>\n        <Stack direction=\"row\" spacing={2}>\n          <Box sx={{ color: \"text.secondary\", fontSize: 15 }}>\n            Low: <span style={{ color: \"#fff\" }}>$152</span>\n          </Box>\n          <Box sx={{ color: \"text.secondary\", fontSize: 15 }}>\n            High: <span style={{ color: \"#fff\" }}>$160</span>\n          </Box>\n        </Stack>\n      </Stack>\n      <Stack direction=\"row\" spacing={11.5}>\n        <Box\n          sx={{\n            color: \"text.secondary\",\n            display: \"inline\",\n            fontWeight: \"medium\",\n            fontSize: 15,\n          }}\n        >\n          Market Cap:\n        </Box>\n        <Box sx={{ color: \"text.primary\", fontSize: 15 }}>$46,748,983,460</Box>\n      </Stack>\n      <Stack direction=\"row\" spacing={4.5}>\n        <Box\n          sx={{\n            color: \"text.secondary\",\n            display: \"inline\",\n            fontWeight: \"medium\",\n            fontSize: 15,\n          }}\n        >\n          24 Hour Trading Vol:\n        </Box>\n        <Box sx={{ color: \"text.primary\", fontSize: 15 }}>$1,448,472,337</Box>\n      </Stack>\n      <Stack direction=\"row\" spacing={2.5}>\n        <Box\n          sx={{\n            color: \"text.secondary\",\n            display: \"inline\",\n            fontWeight: \"medium\",\n            fontSize: 15,\n          }}\n        >\n          Fully Diluted Valuation:\n        </Box>\n        <Box sx={{ color: \"text.primary\", fontSize: 15 }}>$76,253,971,253</Box>\n      </Stack>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport WalletAccordion from \"./WalletAccordion\";\nimport CoinData from \"./CoinData\";\n\nexport default function ControlledAccordions() {\n  const [expanded, setExpanded] = React.useState<string | false>(false);\n\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, isExpanded: boolean) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n  return (\n    <div\n      style={{\n        marginTop: 50,\n        boxShadow: \"21px 18px 38px 0px rgba(0,0,0,0.73)\",\n      }}\n    >\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        style={{ border: \"2px solid grey\", borderRadius: \"10px\" }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography\n            sx={{\n              width: \"33%\",\n              flexShrink: 0,\n              fontFamily: \"Quicksand\",\n              fontSize: 18,\n            }}\n          >\n            Market Data\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <CoinData />\n        </AccordionDetails>\n      </Accordion>\n      <WalletAccordion />\n    </div>\n  );\n}\n","import { Paper } from \"@material-ui/core\";\nimport NavBar from \"./components/AppBar\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Loading from \"./components/Loading\";\nimport { useWalletContext } from \"./store/reducer\";\nimport { ToastContainer } from \"react-toastify\";\nimport ControlledAccordions from \"./components/ControlledAccordion\";\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\n\nif (typeof window !== \"undefined\") {\n  injectStyle();\n}\n\nfunction App() {\n  const { state } = useWalletContext();\n  //console.log(state.pubKey);\n  const explorerUrl = `https://explorer.solana.com/tx/${state.txSignature}?cluster=devnet`;\n  return (\n    <Paper style={{ height: \"100vh\", overflow: \"hidden\" }}>\n      <NavBar />\n\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <ControlledAccordions />\n\n        {state.isFetching && <Loading />}\n        <div style={{ marginTop: 20 }}>\n          <Typography variant=\"subtitle1\" color=\"text.primary\">\n            {state.txSignature && (\n              <a href={explorerUrl} target=\"_blank\" rel=\"noreferrer\">\n                View on Solana Explorer\n              </a>\n            )}\n          </Typography>\n          <ToastContainer />\n        </div>\n      </Container>\n    </Paper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { WalletProvider } from \"./store/reducer\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { green, grey } from \"@mui/material/colors\";\nimport { PaletteMode } from \"@mui/material\";\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n  palette: {\n    mode,\n    primary: {\n      ...green,\n      ...(mode === \"dark\" && {\n        main: green[300],\n      }),\n    },\n    ...(mode === \"dark\" && {\n      background: {\n        default: grey[900],\n        paper: grey[900],\n      },\n    }),\n    text: {\n      ...(mode === \"light\"\n        ? {\n            primary: green[900],\n            secondary: green[800],\n          }\n        : {\n            primary: \"#fff\",\n            secondary: grey.A700,\n          }),\n    },\n  },\n});\n\nconst darkModeTheme = createTheme(getDesignTokens(\"dark\"));\nReactDOM.render(\n  <WalletProvider>\n    <ThemeProvider theme={darkModeTheme}>\n      <App />\n    </ThemeProvider>\n  </WalletProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}